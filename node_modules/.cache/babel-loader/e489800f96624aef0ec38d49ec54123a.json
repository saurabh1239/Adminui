{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saurabh\\\\admin-app\\\\src\\\\Components\\\\Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport SearchData from \"./Search\";\nimport PaginationComp from \"./Pagination\";\nimport EditData from \"./EditData\";\nimport \"./Landing.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Stack } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  //API endpoints to get the in json format\n  const API_URL = `https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json`; //headcell for the table\n\n  const headCell = [{\n    id: 1,\n    label: 'Name'\n  }, {\n    id: 2,\n    label: 'Email'\n  }, {\n    id: 3,\n    label: 'Role'\n  }]; // using react hook useState to toggle between values\n\n  const [data, setData] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectUser, setSelectUser] = useState([]);\n  const [isAllSelected, setIsAllSelected] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // fetch data from API end points and store that into data\n\n  const fetchData = async () => {\n    try {\n      let response = await axios.get(API_URL); //console.log(response.data)\n\n      setData(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }; //serach data using searchbox\n\n\n  const searchData = event => {\n    setSearchText(event.target.value);\n  }; //get the result of users using searchbox which can belong to any category\n\n\n  const filter = () => {\n    if (searchText !== \"\") {\n      const result = data.filter(obj => Object.keys(obj).some(key => obj[key].includes(searchText)));\n      setData(result);\n    } else {\n      setData(data);\n    }\n  }; //using react hook useEffect to render the data\n\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    filter();\n  }, [data, searchText]); // pagination component to display 10 user's data in one page\n\n  const userPerPage = 10;\n  const indexOfLastUser = currentPage * userPerPage;\n  const indexOfFirstUser = indexOfLastUser - userPerPage;\n  const currentUserList = data.slice(indexOfFirstUser, indexOfLastUser); //display the result of the page selected at pagination\n\n  const handlePageChange = number => {\n    setCurrentPage(number);\n  }; //selecting checkbox for all users present on sdisplay page\n\n\n  const handleSelectAll = event => {\n    let newList = [...selectUser];\n\n    if (event.target.checked) {\n      setIsAllSelected(true);\n      newList = currentUserList.map(user => user.id);\n    } else {\n      setIsAllSelected(false);\n      newList = [];\n    }\n\n    setSelectUser(newList);\n  }; // select checkbox for a single user\n\n\n  const handleSelect = event => {\n    const userId = event.target.value;\n    let newList = [...selectUser];\n\n    if (event.target.checked) {\n      newList = [...selectUser, userId];\n    } else {\n      setIsAllSelected(false);\n      newList.splice(selectUser.indexOf(userId), 1);\n    }\n\n    setSelectUser(newList);\n  }; //delete all selected user's data\n\n\n  const handleDeleteAll = () => {\n    const newList = data.filter(user => !selectUser.includes(user.id));\n    setData(newList);\n    enqueueSnackbar(\"Data Deleted successfully \", {\n      variant: \"warning\"\n    });\n    setIsAllSelected(false);\n  }; //delete data for user selected\n\n\n  const handleDeleteRow = userId => {\n    let newList = data.filter(item => item.id !== userId);\n    enqueueSnackbar(\"Data Deleted successfully \", {\n      variant: \"warning\"\n    });\n    setData(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchData, {\n      searchData: searchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 750,\n          pageSize: 10\n        },\n        \"aria-labelledby\": \"tableTitle\",\n        size: \"medium\",\n        responsive: \"true\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                onChange: handleSelectAll,\n                checked: isAllSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), headCell.map(data => /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: \"bold\"\n              },\n              children: data.label\n            }, headCell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: \"bold\",\n                textAlign: \"center\"\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: currentUserList.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                onChange: handleSelect,\n                value: item.id,\n                checked: selectUser.includes(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-evenly'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(EditData, {\n                    data: data,\n                    setData: setData,\n                    userId: item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleDeleteRow(item.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      sx: {\n                        color: \"crimson\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"endBar\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"medium\",\n          color: \"error\",\n          onClick: handleDeleteAll,\n          children: \"Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(PaginationComp, {\n          perPageUser: userPerPage,\n          totalUser: data.length,\n          handlePageChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Landing, \"73A6IFA+QY14CS85E6SSvTRMe74=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","SearchData","PaginationComp","EditData","useSnackbar","Box","Stack","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Checkbox","IconButton","DeleteIcon","Landing","API_URL","headCell","id","label","data","setData","searchText","setSearchText","currentPage","setCurrentPage","selectUser","setSelectUser","isAllSelected","setIsAllSelected","enqueueSnackbar","fetchData","response","get","error","console","log","searchData","event","target","value","filter","result","obj","Object","keys","some","key","includes","userPerPage","indexOfLastUser","indexOfFirstUser","currentUserList","slice","handlePageChange","number","handleSelectAll","newList","checked","map","user","handleSelect","userId","splice","indexOf","handleDeleteAll","variant","handleDeleteRow","item","minWidth","pageSize","fontWeight","textAlign","name","email","role","display","flexDirection","justifyContent","color","length"],"sources":["C:/Users/saurabh/admin-app/src/Components/Landing.js"],"sourcesContent":["import React , {useState , useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport SearchData from \"./Search\";\r\nimport PaginationComp from \"./Pagination\";\r\nimport EditData from \"./EditData\";\r\nimport \"./Landing.css\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport { Box , Stack} from \"@mui/system\";\r\nimport { Button} from \"@mui/material\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\n\r\nconst Landing = () => {\r\n\r\n//API endpoints to get the in json format\r\n\r\nconst API_URL =`https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json`\r\n\r\n\r\n//headcell for the table\r\n\r\nconst headCell = [\r\n    {\r\n        id: 1,\r\n        label: 'Name',\r\n      },\r\n      {\r\n        id: 2,\r\n        label: 'Email',\r\n      },\r\n      {\r\n        id: 3,\r\n        label: 'Role',\r\n      },\r\n     \r\n]\r\n\r\n// using react hook useState to toggle between values\r\n\r\n\r\nconst [data , setData] = useState([])\r\nconst [searchText , setSearchText] = useState(\"\")\r\nconst [currentPage , setCurrentPage] = useState(1)\r\nconst [selectUser, setSelectUser] = useState([])\r\nconst [isAllSelected , setIsAllSelected] = useState(false)\r\nconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n\r\n\r\n// fetch data from API end points and store that into data\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        let response = await axios.get(API_URL)\r\n        //console.log(response.data)\r\n        setData(response.data)\r\n        return response.data\r\n    }\r\n    catch(error) {\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n//serach data using searchbox\r\n\r\nconst searchData= (event) => {\r\n    setSearchText(event.target.value)\r\n}\r\n\r\n\r\n\r\n\r\n//get the result of users using searchbox which can belong to any category\r\n\r\nconst filter = () => {\r\n    if (searchText !== \"\") {\r\n        const result = data.filter((obj) =>\r\n          Object.keys(obj).some((key) => obj[key].includes(searchText))\r\n        );\r\n        setData(result);\r\n      } else {\r\n        setData(data);\r\n      }\r\n}\r\n\r\n//using react hook useEffect to render the data\r\n\r\nuseEffect(() => {\r\n    fetchData()\r\n  },[])\r\n\r\nuseEffect(() => {\r\n    filter();\r\n  }, [data, searchText]);\r\n\r\n\r\n\r\n// pagination component to display 10 user's data in one page\r\nconst userPerPage = 10\r\nconst indexOfLastUser = currentPage * userPerPage;\r\nconst indexOfFirstUser = indexOfLastUser - userPerPage;\r\nconst currentUserList = data.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\r\n\r\n\r\n//display the result of the page selected at pagination\r\nconst handlePageChange =(number) => {\r\n    setCurrentPage(number)\r\n    \r\n   }\r\n\r\n\r\n\r\n//selecting checkbox for all users present on sdisplay page\r\n\r\nconst handleSelectAll = (event) => {\r\n    let newList=[...selectUser]\r\n     if (event.target.checked) {\r\n       setIsAllSelected(true);\r\n       newList = currentUserList.map((user) => user.id);\r\n     } else {\r\n      setIsAllSelected(false);\r\n      newList=[]\r\n     }\r\n     setSelectUser(newList);\r\n };\r\n\r\n\r\n\r\n// select checkbox for a single user\r\n\r\n const handleSelect =(event) => {\r\n    const userId = event.target.value\r\n    let newList = [...selectUser]\r\n\r\n    if (event.target.checked) {\r\n      \r\n        newList =[...selectUser , userId]\r\n    } else {\r\n        setIsAllSelected(false);\r\n        newList.splice(selectUser.indexOf(userId) ,1)\r\n    }\r\n    setSelectUser(newList)\r\n}\r\n\r\n\r\n\r\n\r\n//delete all selected user's data\r\n\r\n\r\nconst handleDeleteAll =() => {\r\n\r\n    const newList = data.filter(\r\n        (user) => !selectUser.includes(user.id)\r\n      );\r\n    \r\n      setData(newList)\r\n      enqueueSnackbar(\"Data Deleted successfully \", { variant: \"warning\" });\r\n      setIsAllSelected(false);\r\n\r\n}\r\n\r\n//delete data for user selected\r\n\r\nconst handleDeleteRow = (userId) => {\r\n\r\n    let newList = data.filter((item) => item.id !== userId)\r\n    enqueueSnackbar(\"Data Deleted successfully \", { variant: \"warning\" });\r\n    setData(newList)\r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n\r\n        <SearchData searchData={searchData}/>\r\n        \r\n        <TableContainer className=\"container\">\r\n        <Table  sx={{ minWidth: 750 , pageSize:10}}\r\n                aria-labelledby=\"tableTitle\"\r\n                size=\"medium\"\r\n                responsive=\"true\"\r\n                >\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell>\r\n                <Checkbox\r\n                     color=\"primary\"          \r\n                     onChange={handleSelectAll}\r\n                     checked={isAllSelected}\r\n                        \r\n                         />\r\n                </TableCell>\r\n           \r\n                     {headCell.map((data) => (\r\n                    <TableCell\r\n                    sx={{fontWeight: \"bold\"}}\r\n                    key={headCell.id}\r\n                  \r\n                    >\r\n                    {data.label}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell sx={{fontWeight: \"bold\" , textAlign : \"center\"}}>Actions</TableCell>\r\n          \r\n            </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody >             \r\n                        {\r\n                            currentUserList.map((item) => (\r\n                               \r\n                                <TableRow key={item.id}>\r\n                                 <TableCell >\r\n                                  <Checkbox\r\n                                 color=\"primary\"\r\n                                 onChange={handleSelect}\r\n                                 value={item.id}\r\n                                 checked={selectUser.includes(item.id)}\r\n                                      />\r\n\r\n                                  </TableCell>\r\n                        \r\n                                <TableCell>{item.name}</TableCell>\r\n                                <TableCell>{item.email}</TableCell>\r\n                                <TableCell>{item.role}</TableCell>\r\n        \r\n                              \r\n                                                           \r\n                               \r\n                                <TableCell>\r\n                                    <Box sx={{display: 'flex', flexDirection: 'row' , justifyContent: 'space-evenly'}}>\r\n                                   \r\n\r\n                                    <Stack>\r\n                                        \r\n                                    <EditData data={data} setData={setData} userId={item.id}/>\r\n                                   \r\n                                    </Stack>\r\n                                    <Stack> <IconButton aria-label=\"delete\"\r\n                                            onClick={() => handleDeleteRow(item.id)}\r\n                                            \r\n                                    >\r\n                                    <DeleteIcon sx={{color :\"crimson\"}}/>\r\n                                    </IconButton> </Stack>\r\n                                    </Box>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                  \r\n                            ))\r\n                        }\r\n                                \r\n                </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n\r\n        <Box className=\"endBar\">\r\n             <Stack> <Button \r\n              variant=\"contained\" size=\"medium\" color=\"error\"\r\n              onClick={handleDeleteAll}\r\n             >\r\n             Delete Selected\r\n            </Button></Stack>\r\n            <Stack> <PaginationComp\r\n            perPageUser={userPerPage}\r\n            totalUser={data.length}\r\n            handlePageChange={handlePageChange}\r\n            \r\n            /> </Stack>\r\n            </Box>\r\n     \r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}