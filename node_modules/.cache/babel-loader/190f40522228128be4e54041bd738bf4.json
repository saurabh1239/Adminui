{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saurabh\\\\admin-app\\\\src\\\\Components\\\\EditData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport { Button } from \"@mui/material\";\nimport TextField from '@mui/material/TextField';\nimport { FormControl } from '@mui/material';\nimport RateReviewIcon from '@mui/icons-material/RateReview';\nimport IconButton from '@mui/material/IconButton';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditData = _ref => {\n  _s();\n\n  let {\n    data,\n    setData,\n    userId\n  } = _ref;\n  //serach For the user whose data to be updated\n  const searchUser = data.find(user => user.id === userId);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // using react hook useState to toggle between values\n\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState({\n    name: searchUser.name,\n    email: searchUser.email,\n    role: searchUser.role\n  });\n  const {\n    name,\n    email,\n    role\n  } = input; //open and close dialog box based on users action\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //store the values entered by user to setInput hook\n\n\n  const handleChange = event => {\n    let id = event.target.id;\n    let value = event.target.value;\n    setInput(values => ({ ...values,\n      [id]: value\n    }));\n  }; //submit the users input and update the data at data table\n\n\n  const submitData = () => {\n    const newList = data.map(item => {\n      if (item.id === userId) {\n        return { ...item,\n          ...input\n        };\n      }\n\n      return item;\n    });\n    enqueueSnackbar(\"Data Updated successfully \", {\n      variant: \"success\"\n    });\n    setData(newList);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"update\",\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(RateReviewIcon, {\n        sx: {\n          color: \"dodgerblue\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Update User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Name\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            placeholder: name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"email\",\n            label: \"Email Address\",\n            type: \"email\",\n            fullWidth: true,\n            variant: \"standard\",\n            placeholder: email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"role\",\n            label: \"Role\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            placeholder: role,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitData,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditData, \"3Dgve+sr089jFj16pxk9N4TfFq0=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = EditData;\nexport default EditData;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditData\");","map":{"version":3,"names":["React","useState","useSnackbar","Button","TextField","FormControl","RateReviewIcon","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","EditData","data","setData","userId","searchUser","find","user","id","enqueueSnackbar","open","setOpen","input","setInput","name","email","role","handleClickOpen","handleClose","handleChange","event","target","value","values","submitData","newList","map","item","variant","color"],"sources":["C:/Users/saurabh/admin-app/src/Components/EditData.js"],"sourcesContent":["import React , { useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {Button} from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { FormControl } from '@mui/material';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n\r\nconst EditData = ({data, setData, userId }) => {\r\n\r\n    //serach For the user whose data to be updated\r\n\r\n    const searchUser = data.find((user) => user.id === userId);\r\n  \r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // using react hook useState to toggle between values\r\n\r\n    const [open, setOpen] = useState(false);\r\n   \r\n    const [input, setInput] = useState({\r\n        name: searchUser.name,\r\n        email:searchUser.email,\r\n        role: searchUser.role,\r\n          \r\n      }) \r\n\r\n      const {name , email , role} = input;\r\n\r\n    //open and close dialog box based on users action\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n   \r\n\r\n  //store the values entered by user to setInput hook\r\n      \r\n  const handleChange = (event) => {\r\n    let  id  = event.target.id;\r\n    let  value  = event.target.value;\r\n   \r\n    setInput((values) => ({...values , [id] : value}));\r\n  };\r\n\r\n  //submit the users input and update the data at data table\r\n\r\n  const submitData = () => {\r\n    const newList = data.map((item) => {\r\n      if (item.id === userId) {\r\n        return { ...item, ...input };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    enqueueSnackbar(\"Data Updated successfully \", { variant: \"success\" });\r\n    \r\n    setData(newList);\r\n    setOpen(false)\r\n  };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <IconButton aria-label=\"update\"\r\n                     onClick={handleClickOpen}>\r\n                     <RateReviewIcon sx={{color :\"dodgerblue\"}}/>\r\n         </IconButton>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Update User Details</DialogTitle>\r\n        <DialogContent>\r\n\r\n            <FormControl>\r\n            <TextField\r\n            required={true}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            placeholder={name}\r\n            onChange={handleChange}\r\n            \r\n            \r\n          />\r\n\r\n            <TextField\r\n            required={true}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            placeholder={email}\r\n            onChange={handleChange}\r\n           \r\n           \r\n           />\r\n\r\n            <TextField\r\n            required={true}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"role\"\r\n            label=\"Role\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            placeholder={role}\r\n            onChange={handleChange}\r\n         \r\n          />\r\n\r\n\r\n            </FormControl>\r\n\r\n         \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={submitData}>Confirm</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default EditData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}