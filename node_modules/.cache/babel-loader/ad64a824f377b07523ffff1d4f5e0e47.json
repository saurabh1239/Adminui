{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saurabh\\\\admin-app\\\\src\\\\Components\\\\Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport SearchData from \"./Search\";\nimport PaginationComp from \"./Pagination\";\nimport EditData from \"./EditData\";\nimport \"./Landing.css\";\nimport { useSnackbar } from \"notistack\";\nimport { Box, Stack } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  //API endpoints to get the in json format\n  const API_URL = `https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json`; //headcell for the table\n\n  const headCell = [{\n    id: 1,\n    label: 'Name'\n  }, {\n    id: 2,\n    label: 'Email'\n  }, {\n    id: 3,\n    label: 'Role'\n  }]; // using react hook useState to toggle between values\n\n  const [data, setData] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectUser, setSelectUser] = useState([]);\n  const [isAllSelected, setIsAllSelected] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // fetch data from API end points and store that into data\n\n  const fetchData = async () => {\n    try {\n      let response = await axios.get(API_URL); //console.log(response.data)\n\n      setData(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }; //serach data using searchbox\n\n\n  const searchData = event => {\n    setSearchText(event.target.value);\n  }; //get the result of users using searchbox which can belong to any category\n\n\n  const filter = () => {\n    if (searchText !== \"\") {\n      const result = data.filter(obj => Object.keys(obj).some(key => obj[key].includes(searchText)));\n      setData(result);\n    } else {\n      setData(data);\n    }\n  }; //using react hook useEffect to render the data\n\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    filter();\n  }, [data, searchText]); // pagination component to display 10 user's data in one page\n\n  const userPerPage = 10;\n  const indexOfLastUser = currentPage * userPerPage;\n  const indexOfFirstUser = indexOfLastUser - userPerPage;\n  const currentUserList = data.slice(indexOfFirstUser, indexOfLastUser); //display the result of the page selected at pagination\n\n  const handlePageChange = number => {\n    setCurrentPage(number);\n  }; //selecting checkbox for all users present on sdisplay page\n\n\n  const handleSelectAll = event => {\n    let newList = [...selectUser];\n\n    if (event.target.checked) {\n      setIsAllSelected(true);\n      newList = currentUserList.map(user => user.id);\n    } else {\n      setIsAllSelected(false);\n      newList = [];\n    }\n\n    setSelectUser(newList);\n  }; // select checkbox for a single user\n\n\n  const handleSelect = event => {\n    const userId = event.target.value;\n    let newList = [...selectUser];\n\n    if (event.target.checked) {\n      newList = [...selectUser, userId];\n    } else {\n      setIsAllSelected(false);\n      newList.splice(selectUser.indexOf(userId), 1);\n    }\n\n    setSelectUser(newList);\n  }; //delete all selected user's data\n\n\n  const handleDeleteAll = () => {\n    const newList = data.filter(user => !selectUser.includes(user.id));\n    setData(newList);\n    enqueueSnackbar(\"Data Deleted successfully \", {\n      variant: \"warning\"\n    });\n    setIsAllSelected(false);\n  }; //delete data for user selected\n\n\n  const handleDeleteRow = userId => {\n    let newList = data.filter(item => item.id !== userId);\n    enqueueSnackbar(\"Data Deleted successfully \", {\n      variant: \"warning\"\n    });\n    setData(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchData, {\n      searchData: searchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 750,\n          pageSize: 10\n        },\n        \"aria-labelledby\": \"tableTitle\",\n        size: \"medium\",\n        responsive: \"true\",\n        color: \"primary\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                onChange: handleSelectAll,\n                checked: isAllSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), headCell.map(data => /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: \"bold\"\n              },\n              children: data.label\n            }, headCell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: \"bold\",\n                textAlign: \"center\"\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: currentUserList.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                onChange: handleSelect,\n                value: item.id,\n                checked: selectUser.includes(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-evenly'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(EditData, {\n                    data: data,\n                    setData: setData,\n                    userId: item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleDeleteRow(item.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      sx: {\n                        color: \"crimson\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 53\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"endBar\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"medium\",\n          color: \"error\",\n          onClick: handleDeleteAll,\n          children: \"Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(PaginationComp, {\n          perPageUser: userPerPage,\n          totalUser: data.length,\n          handlePageChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Landing, \"Y6ziby2b9yTvJEOz4/78Nrd0lWU=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","SearchData","PaginationComp","EditData","useSnackbar","Box","Stack","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Checkbox","IconButton","DeleteIcon","Landing","API_URL","headCell","id","label","data","setData","searchText","setSearchText","currentPage","setCurrentPage","selectUser","setSelectUser","isAllSelected","setIsAllSelected","enqueueSnackbar","fetchData","response","get","error","console","log","searchData","event","target","value","filter","result","obj","Object","keys","some","key","includes","userPerPage","indexOfLastUser","indexOfFirstUser","currentUserList","slice","handlePageChange","number","handleSelectAll","newList","checked","map","user","handleSelect","userId","splice","indexOf","handleDeleteAll","variant","handleDeleteRow","item","minWidth","pageSize","fontWeight","textAlign","name","email","role","display","flexDirection","justifyContent","color","length"],"sources":["C:/Users/saurabh/admin-app/src/Components/Landing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport SearchData from \"./Search\";\r\nimport PaginationComp from \"./Pagination\";\r\nimport EditData from \"./EditData\";\r\nimport \"./Landing.css\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport { Box, Stack } from \"@mui/system\";\r\nimport { Button } from \"@mui/material\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\n\r\nconst Landing = () => {\r\n\r\n    //API endpoints to get the in json format\r\n\r\n    const API_URL = `https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json`\r\n\r\n\r\n    //headcell for the table\r\n\r\n    const headCell = [\r\n        {\r\n            id: 1,\r\n            label: 'Name',\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'Email',\r\n        },\r\n        {\r\n            id: 3,\r\n            label: 'Role',\r\n        },\r\n\r\n    ]\r\n\r\n    // using react hook useState to toggle between values\r\n\r\n\r\n    const [data, setData] = useState([])\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [selectUser, setSelectUser] = useState([])\r\n    const [isAllSelected, setIsAllSelected] = useState(false)\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n\r\n\r\n    // fetch data from API end points and store that into data\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            let response = await axios.get(API_URL)\r\n            //console.log(response.data)\r\n            setData(response.data)\r\n            return response.data\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //serach data using searchbox\r\n\r\n    const searchData = (event) => {\r\n        setSearchText(event.target.value)\r\n    }\r\n\r\n\r\n\r\n\r\n    //get the result of users using searchbox which can belong to any category\r\n\r\n    const filter = () => {\r\n        if (searchText !== \"\") {\r\n            const result = data.filter((obj) =>\r\n                Object.keys(obj).some((key) => obj[key].includes(searchText))\r\n            );\r\n            setData(result);\r\n        } else {\r\n            setData(data);\r\n        }\r\n    }\r\n\r\n    //using react hook useEffect to render the data\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        filter();\r\n    }, [data, searchText]);\r\n\r\n\r\n\r\n    // pagination component to display 10 user's data in one page\r\n    const userPerPage = 10\r\n    const indexOfLastUser = currentPage * userPerPage;\r\n    const indexOfFirstUser = indexOfLastUser - userPerPage;\r\n    const currentUserList = data.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n\r\n\r\n\r\n    //display the result of the page selected at pagination\r\n    const handlePageChange = (number) => {\r\n        setCurrentPage(number)\r\n\r\n    }\r\n\r\n\r\n\r\n    //selecting checkbox for all users present on sdisplay page\r\n\r\n    const handleSelectAll = (event) => {\r\n        let newList = [...selectUser]\r\n        if (event.target.checked) {\r\n            setIsAllSelected(true);\r\n            newList = currentUserList.map((user) => user.id);\r\n        } else {\r\n            setIsAllSelected(false);\r\n            newList = []\r\n        }\r\n        setSelectUser(newList);\r\n    };\r\n\r\n\r\n\r\n    // select checkbox for a single user\r\n\r\n    const handleSelect = (event) => {\r\n        const userId = event.target.value\r\n        let newList = [...selectUser]\r\n\r\n        if (event.target.checked) {\r\n\r\n            newList = [...selectUser, userId]\r\n        } else {\r\n            setIsAllSelected(false);\r\n            newList.splice(selectUser.indexOf(userId), 1)\r\n        }\r\n        setSelectUser(newList)\r\n    }\r\n\r\n\r\n\r\n\r\n    //delete all selected user's data\r\n\r\n\r\n    const handleDeleteAll = () => {\r\n\r\n        const newList = data.filter(\r\n            (user) => !selectUser.includes(user.id)\r\n        );\r\n\r\n        setData(newList)\r\n        enqueueSnackbar(\"Data Deleted successfully \", { variant: \"warning\" });\r\n        setIsAllSelected(false);\r\n\r\n    }\r\n\r\n    //delete data for user selected\r\n\r\n    const handleDeleteRow = (userId) => {\r\n\r\n        let newList = data.filter((item) => item.id !== userId)\r\n        enqueueSnackbar(\"Data Deleted successfully \", { variant: \"warning\" });\r\n        setData(newList)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            <SearchData searchData={searchData} />\r\n\r\n            <TableContainer className=\"container\">\r\n                <Table sx={{ minWidth: 750, pageSize: 10 }}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size=\"medium\"\r\n                    responsive=\"true\"\r\n                    color = \"primary\"\r\n                >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    onChange={handleSelectAll}\r\n                                    checked={isAllSelected}\r\n\r\n                                />\r\n                            </TableCell>\r\n\r\n                            {headCell.map((data) => (\r\n                                <TableCell\r\n                                    sx={{ fontWeight: \"bold\" }}\r\n                                    key={headCell.id}\r\n\r\n                                >\r\n                                    {data.label}\r\n                                </TableCell>\r\n                            ))}\r\n                            <TableCell sx={{ fontWeight: \"bold\", textAlign: \"center\" }}>Actions</TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody >\r\n                        {\r\n                            currentUserList.map((item) => (\r\n\r\n                                <TableRow key={item.id}>\r\n                                    <TableCell >\r\n                                        <Checkbox\r\n                                            color=\"primary\"\r\n                                            onChange={handleSelect}\r\n                                            value={item.id}\r\n                                            checked={selectUser.includes(item.id)}\r\n                                        />\r\n\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.role}</TableCell>\r\n\r\n\r\n\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\r\n\r\n\r\n                                            <Stack>\r\n\r\n                                                <EditData data={data} setData={setData} userId={item.id} />\r\n\r\n                                            </Stack>\r\n                                            <Stack> <IconButton aria-label=\"delete\"\r\n                                                onClick={() => handleDeleteRow(item.id)}\r\n\r\n                                            >\r\n                                                <DeleteIcon sx={{ color: \"crimson\" }} />\r\n                                            </IconButton> </Stack>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n\r\n                            ))\r\n                        }\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Box className=\"endBar\">\r\n                <Stack> <Button\r\n                    variant=\"contained\" size=\"medium\" color=\"error\"\r\n                    onClick={handleDeleteAll}\r\n                >\r\n                    Delete Selected\r\n                </Button></Stack>\r\n                <Stack> <PaginationComp\r\n                    perPageUser={userPerPage}\r\n                    totalUser={data.length}\r\n                    handlePageChange={handlePageChange}\r\n\r\n                /> </Stack>\r\n            </Box>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}